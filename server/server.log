[33mDatabase configuration:[39m
[36mUsing NeonDB serverless PostgreSQL[39m
2025-08-14 03:58:44:5844 [32m[32minfo[32m[39m: [32m[32mStarting Evalis Server...[32m[39m
2025-08-14 03:58:44:5844 [32m[32minfo[32m[39m: [32m[32mEnvironment: development[32m[39m
2025-08-14 03:58:44:5844 [32m[32minfo[32m[39m: [32m[32mDatabase configured: Yes[32m[39m
2025-08-14 03:58:44:5844 [32m[32minfo[32m[39m: [32m[32mPort: 3000[32m[39m
Environment variables incomplete, trying service account file
Loaded Firebase Admin SDK from: /Users/anantmishra/Documents/GitHub/Evalis-GT/Firebase Admin SDK.json
Using Firebase project from file: evalis-d16f2
Using Firebase client email from file: [CONFIGURED]
Private key found in file: [CONFIGURED]
Firebase Admin SDK initialized successfully with JSON file
[33mConnecting to NeonDB PostgreSQL...[39m
âœ… Firebase Admin SDK connection test successful
Executing (default): SELECT 1+1 AS result
[4m[36mNeonDB PostgreSQL Connected[39m[24m
2025-08-14 03:58:46:5846 [32m[32minfo[32m[39m: [32m[32mSyncing database in development mode...[32m[39m
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Batches'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Batches' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Batches' AND tc.table_catalog = 'neondb'
Executing (default): ALTER TABLE "Batches" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "Batches" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "Batches" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Batches" ALTER COLUMN "startYear" SET NOT NULL;ALTER TABLE "Batches" ALTER COLUMN "startYear" DROP DEFAULT;ALTER TABLE "Batches" ALTER COLUMN "startYear" TYPE INTEGER;
Executing (default): ALTER TABLE "Batches" ALTER COLUMN "endYear" SET NOT NULL;ALTER TABLE "Batches" ALTER COLUMN "endYear" DROP DEFAULT;ALTER TABLE "Batches" ALTER COLUMN "endYear" TYPE INTEGER;
Executing (default): ALTER TABLE "Batches" ALTER COLUMN "department" SET NOT NULL;ALTER TABLE "Batches" ALTER COLUMN "department" DROP DEFAULT;ALTER TABLE "Batches" ALTER COLUMN "department" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Batches" ALTER COLUMN "active" DROP NOT NULL;ALTER TABLE "Batches" ALTER COLUMN "active" SET DEFAULT true;ALTER TABLE "Batches" ALTER COLUMN "active" TYPE BOOLEAN;
Executing (default): ALTER TABLE "Batches" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Batches" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Batches" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Batches" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Batches" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Batches" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Batches' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Semesters'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Semesters' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Semesters' AND tc.table_catalog = 'neondb'
Executing (default): ALTER TABLE "Semesters" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "Semesters" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "Semesters" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Semesters" ALTER COLUMN "number" SET NOT NULL;ALTER TABLE "Semesters" ALTER COLUMN "number" DROP DEFAULT;ALTER TABLE "Semesters" ALTER COLUMN "number" TYPE INTEGER;
Executing (default): ALTER TABLE "Semesters" ALTER COLUMN "startDate" SET NOT NULL;ALTER TABLE "Semesters" ALTER COLUMN "startDate" DROP DEFAULT;ALTER TABLE "Semesters" ALTER COLUMN "startDate" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Semesters" ALTER COLUMN "endDate" SET NOT NULL;ALTER TABLE "Semesters" ALTER COLUMN "endDate" DROP DEFAULT;ALTER TABLE "Semesters" ALTER COLUMN "endDate" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Semesters" ALTER COLUMN "active" DROP NOT NULL;ALTER TABLE "Semesters" ALTER COLUMN "active" SET DEFAULT true;ALTER TABLE "Semesters" ALTER COLUMN "active" TYPE BOOLEAN;
Executing (default): ALTER TABLE "Semesters" DROP CONSTRAINT "Semesters_batchId_fkey"
Executing (default): ALTER TABLE "Semesters" ALTER COLUMN "batchId" SET NOT NULL;ALTER TABLE "Semesters"  ADD FOREIGN KEY ("batchId") REFERENCES "Batches" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Semesters" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Semesters" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Semesters" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Semesters" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Semesters" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Semesters" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Semesters' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Students'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Students' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Students' AND tc.table_catalog = 'neondb'
Executing (default): ALTER TABLE "Students" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "Students" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "Students" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Students" ALTER COLUMN "section" SET NOT NULL;ALTER TABLE "Students" ALTER COLUMN "section" DROP DEFAULT;ALTER TABLE "Students" ALTER COLUMN "section" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Students" DROP CONSTRAINT "Students_batch_fkey"
Executing (default): ALTER TABLE "Students" ALTER COLUMN "batch" SET NOT NULL;ALTER TABLE "Students"  ADD FOREIGN KEY ("batch") REFERENCES "Batches" ("id") ON DELETE NO ACTION ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Students" ALTER COLUMN "email" DROP NOT NULL;ALTER TABLE "Students" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "Students"  ADD UNIQUE ("email");ALTER TABLE "Students" ALTER COLUMN "email" TYPE VARCHAR(255) ;
Executing (default): ALTER TABLE "Students" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "Students" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "Students" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Students" ALTER COLUMN "role" DROP NOT NULL;ALTER TABLE "Students" ALTER COLUMN "role" SET DEFAULT 'student';ALTER TABLE "Students" ALTER COLUMN "role" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Students" DROP CONSTRAINT "Students_activeSemesterId_fkey"
Executing (default): ALTER TABLE "Students"  ADD FOREIGN KEY ("activeSemesterId") REFERENCES "Semesters" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Students" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Students" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Students" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Students" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Students" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Students" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Students' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Teachers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Teachers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Teachers' AND tc.table_catalog = 'neondb'
Executing (default): ALTER TABLE "Teachers" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "Teachers" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "Teachers" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Teachers" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "Teachers" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "Teachers"  ADD UNIQUE ("email");ALTER TABLE "Teachers" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "Teachers" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "Teachers" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "Teachers" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Teachers" ALTER COLUMN "role" DROP NOT NULL;ALTER TABLE "Teachers" ALTER COLUMN "role" SET DEFAULT 'teacher';ALTER TABLE "Teachers" ALTER COLUMN "role" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Teachers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Teachers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Teachers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Teachers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Teachers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Teachers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Teachers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Subjects'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Subjects' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Subjects' AND tc.table_catalog = 'neondb'
Executing (default): ALTER TABLE "Subjects" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "Subjects" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "Subjects" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Subjects" ALTER COLUMN "section" SET NOT NULL;ALTER TABLE "Subjects" ALTER COLUMN "section" DROP DEFAULT;ALTER TABLE "Subjects" ALTER COLUMN "section" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Subjects" ALTER COLUMN "description" DROP NOT NULL;ALTER TABLE "Subjects" ALTER COLUMN "description" SET DEFAULT '';ALTER TABLE "Subjects" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "Subjects" ALTER COLUMN "credits" DROP NOT NULL;ALTER TABLE "Subjects" ALTER COLUMN "credits" SET DEFAULT 3;ALTER TABLE "Subjects" ALTER COLUMN "credits" TYPE INTEGER;
Executing (default): ALTER TABLE "Subjects" DROP CONSTRAINT "Subjects_semesterId_fkey"
Executing (default): ALTER TABLE "Subjects"  ADD FOREIGN KEY ("semesterId") REFERENCES "Semesters" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Subjects" DROP CONSTRAINT "Subjects_batchId_fkey"
Executing (default): ALTER TABLE "Subjects"  ADD FOREIGN KEY ("batchId") REFERENCES "Batches" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Subjects" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Subjects" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Subjects" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Subjects" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Subjects" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Subjects" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Subjects' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Assignments'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Assignments' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Assignments' AND tc.table_catalog = 'neondb'
Executing (default): ALTER TABLE "Assignments" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "Assignments" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "Assignments" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Assignments" ALTER COLUMN "description" DROP NOT NULL;ALTER TABLE "Assignments" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "Assignments" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "Assignments" DROP CONSTRAINT "Assignments_subjectId_fkey"
Executing (default): ALTER TABLE "Assignments" ALTER COLUMN "subjectId" SET NOT NULL;ALTER TABLE "Assignments"  ADD FOREIGN KEY ("subjectId") REFERENCES "Subjects" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Assignments" DROP CONSTRAINT "Assignments_teacherId_fkey"
Executing (default): ALTER TABLE "Assignments" ALTER COLUMN "teacherId" SET NOT NULL;ALTER TABLE "Assignments"  ADD FOREIGN KEY ("teacherId") REFERENCES "Teachers" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Assignments" ALTER COLUMN "examType" SET NOT NULL;ALTER TABLE "Assignments" ALTER COLUMN "examType" DROP DEFAULT;ALTER TABLE "Assignments" ALTER COLUMN "examType" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Assignments" ALTER COLUMN "dueDate" DROP NOT NULL;ALTER TABLE "Assignments" ALTER COLUMN "dueDate" DROP DEFAULT;ALTER TABLE "Assignments" ALTER COLUMN "dueDate" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Assignments" ALTER COLUMN "fileUrl" DROP NOT NULL;ALTER TABLE "Assignments" ALTER COLUMN "fileUrl" DROP DEFAULT;ALTER TABLE "Assignments" ALTER COLUMN "fileUrl" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Assignments" ALTER COLUMN "createdAt" DROP NOT NULL;ALTER TABLE "Assignments" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Assignments" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Assignments" ALTER COLUMN "updatedAt" DROP NOT NULL;ALTER TABLE "Assignments" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Assignments" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Assignments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Submissions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Submissions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Submissions' AND tc.table_catalog = 'neondb'
Executing (default): ALTER TABLE "Submissions" DROP CONSTRAINT "Submissions_studentId_fkey"
Executing (default): ALTER TABLE "Submissions" ALTER COLUMN "studentId" SET NOT NULL;ALTER TABLE "Submissions"  ADD FOREIGN KEY ("studentId") REFERENCES "Students" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Submissions" DROP CONSTRAINT "Submissions_subjectId_fkey"
Executing (default): ALTER TABLE "Submissions" ALTER COLUMN "subjectId" SET NOT NULL;ALTER TABLE "Submissions"  ADD FOREIGN KEY ("subjectId") REFERENCES "Subjects" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Submissions" DROP CONSTRAINT "Submissions_assignmentId_fkey"
Executing (default): ALTER TABLE "Submissions"  ADD FOREIGN KEY ("assignmentId") REFERENCES "Assignments" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Submissions" ALTER COLUMN "examType" SET NOT NULL;ALTER TABLE "Submissions" ALTER COLUMN "examType" DROP DEFAULT;ALTER TABLE "Submissions" ALTER COLUMN "examType" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Submissions" ALTER COLUMN "submissionText" SET NOT NULL;ALTER TABLE "Submissions" ALTER COLUMN "submissionText" DROP DEFAULT;ALTER TABLE "Submissions" ALTER COLUMN "submissionText" TYPE TEXT;
Executing (default): ALTER TABLE "Submissions" ALTER COLUMN "fileUrl" DROP NOT NULL;ALTER TABLE "Submissions" ALTER COLUMN "fileUrl" DROP DEFAULT;ALTER TABLE "Submissions" ALTER COLUMN "fileUrl" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Submissions" ALTER COLUMN "submissionDate" DROP NOT NULL;ALTER TABLE "Submissions" ALTER COLUMN "submissionDate" DROP DEFAULT;ALTER TABLE "Submissions" ALTER COLUMN "submissionDate" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Submissions" ALTER COLUMN "score" DROP NOT NULL;ALTER TABLE "Submissions" ALTER COLUMN "score" DROP DEFAULT;ALTER TABLE "Submissions" ALTER COLUMN "score" TYPE FLOAT;
Executing (default): ALTER TABLE "Submissions" ALTER COLUMN "plagiarismScore" DROP NOT NULL;ALTER TABLE "Submissions" ALTER COLUMN "plagiarismScore" SET DEFAULT '0';ALTER TABLE "Submissions" ALTER COLUMN "plagiarismScore" TYPE FLOAT;
Executing (default): ALTER TABLE "Submissions" ALTER COLUMN "feedback" DROP NOT NULL;ALTER TABLE "Submissions" ALTER COLUMN "feedback" SET DEFAULT '';ALTER TABLE "Submissions" ALTER COLUMN "feedback" TYPE TEXT;
Executing (default): ALTER TABLE "Submissions" ALTER COLUMN "graded" DROP NOT NULL;ALTER TABLE "Submissions" ALTER COLUMN "graded" SET DEFAULT false;ALTER TABLE "Submissions" ALTER COLUMN "graded" TYPE BOOLEAN;
Executing (default): ALTER TABLE "Submissions" DROP CONSTRAINT "Submissions_gradedBy_fkey"
Executing (default): ALTER TABLE "Submissions"  ADD FOREIGN KEY ("gradedBy") REFERENCES "Teachers" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Submissions" ALTER COLUMN "gradedDate" DROP NOT NULL;ALTER TABLE "Submissions" ALTER COLUMN "gradedDate" DROP DEFAULT;ALTER TABLE "Submissions" ALTER COLUMN "gradedDate" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Submissions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Submissions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Submissions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Submissions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Submissions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Submissions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Submissions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Admins'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Admins' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Admins' AND tc.table_catalog = 'neondb'
Executing (default): ALTER TABLE "Admins" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "Admins" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "Admins"  ADD UNIQUE ("username");ALTER TABLE "Admins" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "Admins" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "Admins" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "Admins" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Admins" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "Admins" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "Admins"  ADD UNIQUE ("email");ALTER TABLE "Admins" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "Admins" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "Admins" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "Admins" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Admins" ALTER COLUMN "role" DROP NOT NULL;ALTER TABLE "Admins" ALTER COLUMN "role" SET DEFAULT 'admin';ALTER TABLE "Admins" ALTER COLUMN "role" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Admins" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Admins" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Admins" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Admins" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Admins" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Admins" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Admins' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'TeacherSubjects'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'TeacherSubjects' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'TeacherSubjects' AND tc.table_catalog = 'neondb'
Executing (default): ALTER TABLE "TeacherSubjects" DROP CONSTRAINT "TeacherSubjects_teacherId_fkey"
Executing (default): ALTER TABLE "TeacherSubjects" ALTER COLUMN "teacherId" SET NOT NULL;ALTER TABLE "TeacherSubjects"  ADD FOREIGN KEY ("teacherId") REFERENCES "Teachers" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "TeacherSubjects" DROP CONSTRAINT "TeacherSubjects_subjectId_fkey"
Executing (default): ALTER TABLE "TeacherSubjects" ALTER COLUMN "subjectId" SET NOT NULL;ALTER TABLE "TeacherSubjects"  ADD FOREIGN KEY ("subjectId") REFERENCES "Subjects" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "TeacherSubjects" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "TeacherSubjects" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "TeacherSubjects" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "TeacherSubjects" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "TeacherSubjects" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "TeacherSubjects" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'TeacherSubjects' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2025-08-14 03:58:57:5857 [32m[32minfo[32m[39m: [32m[32mDatabase synced successfully[32m[39m
2025-08-14 03:58:57:5857 [37m[37mdebug[37m[39m: [37m[37mServing uploads from:[37m[39m
2025-08-14 03:58:57:5857 [37m[37mdebug[37m[39m: [37m[37mAlso serving uploads from: server/uploads (relative path)[37m[39m
2025-08-14 03:58:57:5857 [33m[33mwarn[33m[39m: [33m[33mPort 3000 is in use, trying port 3001...[33m[39m
2025-08-14 03:58:57:5857 [37m[37mdebug[37m[39m: [37m[37mConnection closed. Total connections: -1[37m[39m
2025-08-14 03:58:57:5857 [32m[32minfo[32m[39m: [32m[32mServer running in development mode on port 3001[32m[39m
2025-08-14 03:59:00:590 [37m[37mdebug[37m[39m: [37m[37mNew connection established. Total connections: 1[37m[39m
2025-08-14 03:59:00:590 [35m[35mhttp[35m[39m: [35m[35mGET /api/health - ::1[35m[39m
Executing (default): SELECT 1+1 AS result
2025-08-14 03:59:00:590 [35m[35mhttp[35m[39m: [35m[35mGET /health - 200 - 320ms - ::1[35m[39m
2025-08-14 04:00:37:037 [37m[37mdebug[37m[39m: [37m[37mNew connection established. Total connections: 2[37m[39m
2025-08-14 04:00:37:037 [35m[35mhttp[35m[39m: [35m[35mPOST /api/auth/admin/login - ::1[35m[39m
2025-08-14 04:00:37:037 [32m[32minfo[32m[39m: [32m[32mAdmin login attempt for username: superadmin[32m[39m
Executing (default): SELECT "id", "username", "name", "email", "password", "role", "createdAt", "updatedAt" FROM "Admins" AS "Admin" WHERE "Admin"."username" = 'superadmin';
2025-08-14 04:00:38:038 [33m[33mwarn[33m[39m: [33m[33mAdmin login failed: No admin found with username superadmin[33m[39m
2025-08-14 04:00:38:038 [35m[35mhttp[35m[39m: [35m[35mPOST /api/auth/admin/login - 401 - 866ms - ::1[35m[39m
2025-08-14 04:01:06:16 [37m[37mdebug[37m[39m: [37m[37mNew connection established. Total connections: 3[37m[39m
2025-08-14 04:01:06:16 [35m[35mhttp[35m[39m: [35m[35mPOST /api/auth/admin/login - ::1[35m[39m
2025-08-14 04:01:06:16 [32m[32minfo[32m[39m: [32m[32mAdmin login attempt for username: admin[32m[39m
Executing (default): SELECT "id", "username", "name", "email", "password", "role", "createdAt", "updatedAt" FROM "Admins" AS "Admin" WHERE "Admin"."username" = 'admin';
Comparing password for admin: admin
Entered password length: 16
Stored password hash length: 60
Password match result: false
2025-08-14 04:01:07:17 [37m[37mdebug[37m[39m: [37m[37mAdmin password match result: false[37m[39m
2025-08-14 04:01:07:17 [33m[33mwarn[33m[39m: [33m[33mAdmin login failed: Invalid password for admin[33m[39m
2025-08-14 04:01:07:17 [35m[35mhttp[35m[39m: [35m[35mPOST /api/auth/admin/login - 401 - 1095ms - ::1[35m[39m
